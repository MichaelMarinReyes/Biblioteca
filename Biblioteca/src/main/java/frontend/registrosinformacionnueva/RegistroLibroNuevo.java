package frontend.registrosinformacionnueva;

import java.awt.Color;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author michael
 */
public class RegistroLibroNuevo extends javax.swing.JPanel {

    /**
     * Creates new form RegistroLibroNuevo
     */
    public RegistroLibroNuevo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        codigoLibroText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        autorLibroText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tituloLibroText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        copiasText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fechaText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        editorialText = new javax.swing.JTextField();
        guardarLibroBoton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Código:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(74, 237, 0, 0);
        add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 96;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 212, 0, 0);
        add(codigoLibroText, gridBagConstraints);

        jLabel2.setText("Autor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 242, 0, 0);
        add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 176, 0, 0);
        add(autorLibroText, gridBagConstraints);

        jLabel3.setText("Título:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 243, 0, 0);
        add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 176, 0, 0);
        add(tituloLibroText, gridBagConstraints);

        jLabel4.setText("Cantidad de copias:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 203, 0, 0);
        add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 168;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 176, 0, 175);
        add(copiasText, gridBagConstraints);

        jLabel5.setText("Fecha de publicación:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 201, 0, 0);
        add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 176, 0, 0);
        add(fechaText, gridBagConstraints);

        jLabel6.setText("Editorial:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 223, 0, 0);
        add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 168;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 176, 0, 175);
        add(editorialText, gridBagConstraints);

        guardarLibroBoton.setText("Guardar Libro");
        guardarLibroBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarLibroBotonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(44, 199, 61, 0);
        add(guardarLibroBoton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void guardarLibroBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarLibroBotonActionPerformed
        if (validarCamposObligatorios(codigoLibroText.getText(), autorLibroText.getText(), tituloLibroText.getText(), copiasText.getText()) == true && fechaText.getText().equals(" ") && editorialText.getText().equals(" ")) {
            //MANDAR DATOS AL BACKEND
            System.out.println("ENTRE A FECHA Y EDITORIAL VACÍAS");
            mostrarDatos();
            limpiarCampos();
            guardarLibroBoton.setBackground(Color.GREEN);
        } else if (validarCamposObligatorios(codigoLibroText.getText(), autorLibroText.getText(), tituloLibroText.getText(), copiasText.getText()) == true && !fechaText.getText().equals(" ") && editorialText.getText().equals(" ")) {
            System.out.println("ENTRÉ A SOLO EDITORIAL VACÍA");
            mostrarDatos();
            verificarFormatoFecha(fechaText.getText());
        } else if (validarCamposObligatorios(codigoLibroText.getText(), autorLibroText.getText(), tituloLibroText.getText(), copiasText.getText()) == true && !fechaText.getText().equals(" ") && !editorialText.getText().equals(" ")) {
            System.out.println("ENTRÉ A TODOS LOS CAMPOS LLENOS");
            mostrarDatos();
            verificarFormatoFecha(fechaText.getText());
        } else if (validarCamposObligatorios(codigoLibroText.getText(), autorLibroText.getText(), tituloLibroText.getText(), copiasText.getText()) == true && fechaText.getText().equals(" ") && !editorialText.getText().equals(" ")) {
            //MANDAR DATOS AL BACKEND
            System.out.println("ENTRÉ A FECHA VACÍA ");
            mostrarDatos();
            limpiarCampos();
            guardarLibroBoton.setBackground(Color.GREEN);
        } else {
            guardarLibroBoton.setBackground(Color.red);
        }
    }//GEN-LAST:event_guardarLibroBotonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField autorLibroText;
    private javax.swing.JTextField codigoLibroText;
    private javax.swing.JTextField copiasText;
    private javax.swing.JTextField editorialText;
    private javax.swing.JTextField fechaText;
    private javax.swing.JButton guardarLibroBoton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField tituloLibroText;
    // End of variables declaration//GEN-END:variables

    private void validarCodigo(String codigo) {
        String[] codigoLibro = codigo.split("-");

        try {
            int formato = Integer.parseInt(codigoLibro[0]);

            if (codigoLibro[0].length() != 3 || codigoLibro[1].length() != 3) {
                JOptionPane.showMessageDialog(this, "Formáto de código de libro inválido.\n\nEl formáto debe contener tres dígitos, guión, tres mayúsculas.\nEj. 123-ABC");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Formáto de código de libro inválido.\n\nEl formáto debe contener tres dígitos, guión, tres mayúsculas.\nEj. 123-ABC");
        }
    }

    private void validarNumero(String texto) {
        try {
            int numero = Integer.parseInt(texto);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ERROR.\nDebe llenar el campo con números");
        }
    }

    private boolean validarCamposObligatorios(String codigo, String autor, String titulo, String cantidadCopias) {
        if (codigo.equals(" ") && autor.equals(" ") && titulo.equals(" ") && cantidadCopias.equals(" ")) {
            JOptionPane.showMessageDialog(this, "Por favor llene los campos obligatorios.\n\n Campos obligatorios: Código, Autor, Título, Cantidad de copias");
            return false;
        } else {
            validarCodigo(codigo);
            validarNumero(cantidadCopias);
            return true;
        }
    }

    private void verificarFormatoFecha(String texto) {
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date fecha = formato.parse(texto);
            //mandar a guardar la fecha
            String fechaFormateada = formato.format(fecha);
            limpiarCampos();
            guardarLibroBoton.setBackground(Color.GREEN);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al ingresar la fecha\nEl formato es yyyy-mm-dd");
            guardarLibroBoton.setBackground(Color.RED);
        }
    }

    private void limpiarCampos() {
        codigoLibroText.setText(" ");
        autorLibroText.setText(" ");
        tituloLibroText.setText(" ");
        copiasText.setText(" ");
        fechaText.setText(" ");
        editorialText.setText(" ");
        guardarLibroBoton.setBackground(Color.GREEN);
    }
    
    private void mostrarDatos() {
        System.out.println(codigoLibroText.getText());
        System.out.println(autorLibroText.getText());
        System.out.println(tituloLibroText.getText());
        System.out.println(copiasText.getText());
        System.out.println(fechaText.getText());
        System.out.println(editorialText.getText());
    }
}
